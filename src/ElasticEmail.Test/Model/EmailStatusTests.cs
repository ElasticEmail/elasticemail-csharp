/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ElasticEmail.Api;
using ElasticEmail.Model;
using ElasticEmail.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ElasticEmail.Test.Model
{
    /// <summary>
    ///  Class for testing EmailStatus
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class EmailStatusTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for EmailStatus
        //private EmailStatus instance;

        public EmailStatusTests()
        {
            // TODO uncomment below to create an instance of EmailStatus
            //instance = new EmailStatus();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of EmailStatus
        /// </summary>
        [Fact]
        public void EmailStatusInstanceTest()
        {
            // TODO uncomment below to test "IsType" EmailStatus
            //Assert.IsType<EmailStatus>(instance);
        }


        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }
        /// <summary>
        /// Test the property 'To'
        /// </summary>
        [Fact]
        public void ToTest()
        {
            // TODO unit test for the property 'To'
        }
        /// <summary>
        /// Test the property 'Date'
        /// </summary>
        [Fact]
        public void DateTest()
        {
            // TODO unit test for the property 'Date'
        }
        /// <summary>
        /// Test the property 'Status'
        /// </summary>
        [Fact]
        public void StatusTest()
        {
            // TODO unit test for the property 'Status'
        }
        /// <summary>
        /// Test the property 'StatusName'
        /// </summary>
        [Fact]
        public void StatusNameTest()
        {
            // TODO unit test for the property 'StatusName'
        }
        /// <summary>
        /// Test the property 'StatusChangeDate'
        /// </summary>
        [Fact]
        public void StatusChangeDateTest()
        {
            // TODO unit test for the property 'StatusChangeDate'
        }
        /// <summary>
        /// Test the property 'DateSent'
        /// </summary>
        [Fact]
        public void DateSentTest()
        {
            // TODO unit test for the property 'DateSent'
        }
        /// <summary>
        /// Test the property 'DateOpened'
        /// </summary>
        [Fact]
        public void DateOpenedTest()
        {
            // TODO unit test for the property 'DateOpened'
        }
        /// <summary>
        /// Test the property 'DateClicked'
        /// </summary>
        [Fact]
        public void DateClickedTest()
        {
            // TODO unit test for the property 'DateClicked'
        }
        /// <summary>
        /// Test the property 'ErrorMessage'
        /// </summary>
        [Fact]
        public void ErrorMessageTest()
        {
            // TODO unit test for the property 'ErrorMessage'
        }
        /// <summary>
        /// Test the property 'TransactionID'
        /// </summary>
        [Fact]
        public void TransactionIDTest()
        {
            // TODO unit test for the property 'TransactionID'
        }
        /// <summary>
        /// Test the property 'EnvelopeFrom'
        /// </summary>
        [Fact]
        public void EnvelopeFromTest()
        {
            // TODO unit test for the property 'EnvelopeFrom'
        }

    }

}
