/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ElasticEmail.Api;
using ElasticEmail.Model;
using ElasticEmail.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ElasticEmail.Test.Model
{
    /// <summary>
    ///  Class for testing LogStatusSummary
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class LogStatusSummaryTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for LogStatusSummary
        //private LogStatusSummary instance;

        public LogStatusSummaryTests()
        {
            // TODO uncomment below to create an instance of LogStatusSummary
            //instance = new LogStatusSummary();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of LogStatusSummary
        /// </summary>
        [Fact]
        public void LogStatusSummaryInstanceTest()
        {
            // TODO uncomment below to test "IsType" LogStatusSummary
            //Assert.IsType<LogStatusSummary>(instance);
        }


        /// <summary>
        /// Test the property 'Recipients'
        /// </summary>
        [Fact]
        public void RecipientsTest()
        {
            // TODO unit test for the property 'Recipients'
        }
        /// <summary>
        /// Test the property 'EmailTotal'
        /// </summary>
        [Fact]
        public void EmailTotalTest()
        {
            // TODO unit test for the property 'EmailTotal'
        }
        /// <summary>
        /// Test the property 'SmsTotal'
        /// </summary>
        [Fact]
        public void SmsTotalTest()
        {
            // TODO unit test for the property 'SmsTotal'
        }
        /// <summary>
        /// Test the property 'Delivered'
        /// </summary>
        [Fact]
        public void DeliveredTest()
        {
            // TODO unit test for the property 'Delivered'
        }
        /// <summary>
        /// Test the property 'Bounced'
        /// </summary>
        [Fact]
        public void BouncedTest()
        {
            // TODO unit test for the property 'Bounced'
        }
        /// <summary>
        /// Test the property 'InProgress'
        /// </summary>
        [Fact]
        public void InProgressTest()
        {
            // TODO unit test for the property 'InProgress'
        }
        /// <summary>
        /// Test the property 'Opened'
        /// </summary>
        [Fact]
        public void OpenedTest()
        {
            // TODO unit test for the property 'Opened'
        }
        /// <summary>
        /// Test the property 'Clicked'
        /// </summary>
        [Fact]
        public void ClickedTest()
        {
            // TODO unit test for the property 'Clicked'
        }
        /// <summary>
        /// Test the property 'Unsubscribed'
        /// </summary>
        [Fact]
        public void UnsubscribedTest()
        {
            // TODO unit test for the property 'Unsubscribed'
        }
        /// <summary>
        /// Test the property 'Complaints'
        /// </summary>
        [Fact]
        public void ComplaintsTest()
        {
            // TODO unit test for the property 'Complaints'
        }
        /// <summary>
        /// Test the property 'Inbound'
        /// </summary>
        [Fact]
        public void InboundTest()
        {
            // TODO unit test for the property 'Inbound'
        }
        /// <summary>
        /// Test the property 'ManualCancel'
        /// </summary>
        [Fact]
        public void ManualCancelTest()
        {
            // TODO unit test for the property 'ManualCancel'
        }
        /// <summary>
        /// Test the property 'NotDelivered'
        /// </summary>
        [Fact]
        public void NotDeliveredTest()
        {
            // TODO unit test for the property 'NotDelivered'
        }

    }

}
