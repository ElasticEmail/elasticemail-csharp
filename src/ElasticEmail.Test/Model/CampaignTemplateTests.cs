/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using Xunit;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ElasticEmail.Api;
using ElasticEmail.Model;
using ElasticEmail.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace ElasticEmail.Test.Model
{
    /// <summary>
    ///  Class for testing CampaignTemplate
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the model.
    /// </remarks>
    public class CampaignTemplateTests : IDisposable
    {
        // TODO uncomment below to declare an instance variable for CampaignTemplate
        //private CampaignTemplate instance;

        public CampaignTemplateTests()
        {
            // TODO uncomment below to create an instance of CampaignTemplate
            //instance = new CampaignTemplate();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of CampaignTemplate
        /// </summary>
        [Fact]
        public void CampaignTemplateInstanceTest()
        {
            // TODO uncomment below to test "IsType" CampaignTemplate
            //Assert.IsType<CampaignTemplate>(instance);
        }


        /// <summary>
        /// Test the property 'Poolname'
        /// </summary>
        [Fact]
        public void PoolnameTest()
        {
            // TODO unit test for the property 'Poolname'
        }
        /// <summary>
        /// Test the property 'From'
        /// </summary>
        [Fact]
        public void FromTest()
        {
            // TODO unit test for the property 'From'
        }
        /// <summary>
        /// Test the property 'ReplyTo'
        /// </summary>
        [Fact]
        public void ReplyToTest()
        {
            // TODO unit test for the property 'ReplyTo'
        }
        /// <summary>
        /// Test the property 'Subject'
        /// </summary>
        [Fact]
        public void SubjectTest()
        {
            // TODO unit test for the property 'Subject'
        }
        /// <summary>
        /// Test the property 'TemplateName'
        /// </summary>
        [Fact]
        public void TemplateNameTest()
        {
            // TODO unit test for the property 'TemplateName'
        }
        /// <summary>
        /// Test the property 'AttachFiles'
        /// </summary>
        [Fact]
        public void AttachFilesTest()
        {
            // TODO unit test for the property 'AttachFiles'
        }
        /// <summary>
        /// Test the property 'Utm'
        /// </summary>
        [Fact]
        public void UtmTest()
        {
            // TODO unit test for the property 'Utm'
        }

    }

}
