/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ElasticEmail.Client;
using ElasticEmail.Api;
// uncomment below to import models
//using ElasticEmail.Model;

namespace ElasticEmail.Test.Api
{
    /// <summary>
    ///  Class for testing VerificationsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class VerificationsApiTests : IDisposable
    {
        private VerificationsApi instance;

        public VerificationsApiTests()
        {
            instance = new VerificationsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of VerificationsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' VerificationsApi
            //Assert.IsType<VerificationsApi>(instance);
        }

        /// <summary>
        /// Test VerificationsByEmailDelete
        /// </summary>
        [Fact]
        public void VerificationsByEmailDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //instance.VerificationsByEmailDelete(email);
        }

        /// <summary>
        /// Test VerificationsByEmailGet
        /// </summary>
        [Fact]
        public void VerificationsByEmailGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.VerificationsByEmailGet(email);
            //Assert.IsType<EmailValidationResult>(response);
        }

        /// <summary>
        /// Test VerificationsByEmailPost
        /// </summary>
        [Fact]
        public void VerificationsByEmailPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.VerificationsByEmailPost(email);
            //Assert.IsType<EmailValidationResult>(response);
        }

        /// <summary>
        /// Test VerificationsFilesByIdDelete
        /// </summary>
        [Fact]
        public void VerificationsFilesByIdDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //instance.VerificationsFilesByIdDelete(id);
        }

        /// <summary>
        /// Test VerificationsFilesByIdResultDownloadGet
        /// </summary>
        [Fact]
        public void VerificationsFilesByIdResultDownloadGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //var response = instance.VerificationsFilesByIdResultDownloadGet(id);
            //Assert.IsType<System.IO.Stream>(response);
        }

        /// <summary>
        /// Test VerificationsFilesByIdResultGet
        /// </summary>
        [Fact]
        public void VerificationsFilesByIdResultGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string id = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.VerificationsFilesByIdResultGet(id, limit, offset);
            //Assert.IsType<VerificationFileResultDetails>(response);
        }

        /// <summary>
        /// Test VerificationsFilesPost
        /// </summary>
        [Fact]
        public void VerificationsFilesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //var response = instance.VerificationsFilesPost(file);
            //Assert.IsType<VerificationFileResult>(response);
        }

        /// <summary>
        /// Test VerificationsFilesResultGet
        /// </summary>
        [Fact]
        public void VerificationsFilesResultGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.VerificationsFilesResultGet();
            //Assert.IsType<List<VerificationFileResult>>(response);
        }

        /// <summary>
        /// Test VerificationsGet
        /// </summary>
        [Fact]
        public void VerificationsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //var response = instance.VerificationsGet(limit, offset);
            //Assert.IsType<List<EmailValidationResult>>(response);
        }
    }
}
