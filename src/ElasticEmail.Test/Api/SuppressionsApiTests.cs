/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    To start using this API, you will need your Access Token (available <a href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given request’s description.    This is the documentation for REST API. If you’d like to read our legacy documentation regarding Web API v2 click <a href=\"https://api.elasticemail.com/public/help\">here</a>.
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using ElasticEmail.Client;
using ElasticEmail.Api;
// uncomment below to import models
//using ElasticEmail.Model;

namespace ElasticEmail.Test.Api
{
    /// <summary>
    ///  Class for testing SuppressionsApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class SuppressionsApiTests : IDisposable
    {
        private SuppressionsApi instance;

        public SuppressionsApiTests()
        {
            instance = new SuppressionsApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of SuppressionsApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' SuppressionsApi
            //Assert.IsType<SuppressionsApi>(instance);
        }

        /// <summary>
        /// Test SuppressionsBouncesGet
        /// </summary>
        [Fact]
        public void SuppressionsBouncesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.SuppressionsBouncesGet(search, limit, offset);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsBouncesImportPost
        /// </summary>
        [Fact]
        public void SuppressionsBouncesImportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //instance.SuppressionsBouncesImportPost(file);
        }

        /// <summary>
        /// Test SuppressionsBouncesPost
        /// </summary>
        [Fact]
        public void SuppressionsBouncesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.SuppressionsBouncesPost(requestBody);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsByEmailDelete
        /// </summary>
        [Fact]
        public void SuppressionsByEmailDeleteTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //instance.SuppressionsByEmailDelete(email);
        }

        /// <summary>
        /// Test SuppressionsByEmailGet
        /// </summary>
        [Fact]
        public void SuppressionsByEmailGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string email = null;
            //var response = instance.SuppressionsByEmailGet(email);
            //Assert.IsType<Suppression>(response);
        }

        /// <summary>
        /// Test SuppressionsComplaintsGet
        /// </summary>
        [Fact]
        public void SuppressionsComplaintsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.SuppressionsComplaintsGet(search, limit, offset);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsComplaintsImportPost
        /// </summary>
        [Fact]
        public void SuppressionsComplaintsImportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //instance.SuppressionsComplaintsImportPost(file);
        }

        /// <summary>
        /// Test SuppressionsComplaintsPost
        /// </summary>
        [Fact]
        public void SuppressionsComplaintsPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.SuppressionsComplaintsPost(requestBody);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsGet
        /// </summary>
        [Fact]
        public void SuppressionsGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //int? limit = null;
            //int? offset = null;
            //var response = instance.SuppressionsGet(limit, offset);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsUnsubscribesGet
        /// </summary>
        [Fact]
        public void SuppressionsUnsubscribesGetTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string search = null;
            //int? limit = null;
            //int? offset = null;
            //var response = instance.SuppressionsUnsubscribesGet(search, limit, offset);
            //Assert.IsType<List<Suppression>>(response);
        }

        /// <summary>
        /// Test SuppressionsUnsubscribesImportPost
        /// </summary>
        [Fact]
        public void SuppressionsUnsubscribesImportPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //System.IO.Stream file = null;
            //instance.SuppressionsUnsubscribesImportPost(file);
        }

        /// <summary>
        /// Test SuppressionsUnsubscribesPost
        /// </summary>
        [Fact]
        public void SuppressionsUnsubscribesPostTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> requestBody = null;
            //var response = instance.SuppressionsUnsubscribesPost(requestBody);
            //Assert.IsType<List<Suppression>>(response);
        }
    }
}
