/*
 * Elastic Email REST API
 *
 * This API is based on the REST API architecture, allowing the user to easily manage their data with this resource-based approach.    Every API call is established on which specific request type (GET, POST, PUT, DELETE) will be used.    The API has a limit of 20 concurrent connections and a hard timeout of 600 seconds per request.    To start using this API, you will need your Access Token (available <a target=\"_blank\" href=\"https://elasticemail.com/account#/settings/new/manage-api\">here</a>). Remember to keep it safe. Required access levels are listed in the given requestâ€™s description.    Downloadable library clients can be found in our Github repository <a target=\"_blank\" href=\"https://github.com/ElasticEmail?tab=repositories&q=%22rest+api%22+in%3Areadme\">here</a>
 *
 * The version of the OpenAPI document: 4.0.0
 * Contact: support@elasticemail.com
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Net;
using System.Net.Mime;
using ElasticEmail.Client;
using ElasticEmail.Model;

namespace ElasticEmail.Api
{

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISubAccountsApiSync : IApiAccessor
    {
        #region Synchronous Operations
        /// <summary>
        /// Add, Subtract Email Credits
        /// </summary>
        /// <remarks>
        /// Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <returns></returns>
        void SubaccountsByEmailCreditsPatch(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload);

        /// <summary>
        /// Add, Subtract Email Credits
        /// </summary>
        /// <remarks>
        /// Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> SubaccountsByEmailCreditsPatchWithHttpInfo(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload);
        /// <summary>
        /// Delete SubAccount
        /// </summary>
        /// <remarks>
        /// Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns></returns>
        void SubaccountsByEmailDelete(string email);

        /// <summary>
        /// Delete SubAccount
        /// </summary>
        /// <remarks>
        /// Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>ApiResponse of Object(void)</returns>
        ApiResponse<Object> SubaccountsByEmailDeleteWithHttpInfo(string email);
        /// <summary>
        /// Load SubAccount
        /// </summary>
        /// <remarks>
        /// Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>SubAccountInfo</returns>
        SubAccountInfo SubaccountsByEmailGet(string email);

        /// <summary>
        /// Load SubAccount
        /// </summary>
        /// <remarks>
        /// Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>ApiResponse of SubAccountInfo</returns>
        ApiResponse<SubAccountInfo> SubaccountsByEmailGetWithHttpInfo(string email);
        /// <summary>
        /// Update SubAccount Email Settings
        /// </summary>
        /// <remarks>
        /// Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <returns>SubaccountEmailSettings</returns>
        SubaccountEmailSettings SubaccountsByEmailSettingsEmailPut(string email, SubaccountEmailSettings subaccountEmailSettings);

        /// <summary>
        /// Update SubAccount Email Settings
        /// </summary>
        /// <remarks>
        /// Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <returns>ApiResponse of SubaccountEmailSettings</returns>
        ApiResponse<SubaccountEmailSettings> SubaccountsByEmailSettingsEmailPutWithHttpInfo(string email, SubaccountEmailSettings subaccountEmailSettings);
        /// <summary>
        /// Load SubAccounts
        /// </summary>
        /// <remarks>
        /// Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <returns>List&lt;SubAccountInfo&gt;</returns>
        List<SubAccountInfo> SubaccountsGet(int? limit = default(int?), int? offset = default(int?));

        /// <summary>
        /// Load SubAccounts
        /// </summary>
        /// <remarks>
        /// Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <returns>ApiResponse of List&lt;SubAccountInfo&gt;</returns>
        ApiResponse<List<SubAccountInfo>> SubaccountsGetWithHttpInfo(int? limit = default(int?), int? offset = default(int?));
        /// <summary>
        /// Add SubAccount
        /// </summary>
        /// <remarks>
        /// Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <returns>SubAccountInfo</returns>
        SubAccountInfo SubaccountsPost(SubaccountPayload subaccountPayload);

        /// <summary>
        /// Add SubAccount
        /// </summary>
        /// <remarks>
        /// Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <returns>ApiResponse of SubAccountInfo</returns>
        ApiResponse<SubAccountInfo> SubaccountsPostWithHttpInfo(SubaccountPayload subaccountPayload);
        #endregion Synchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISubAccountsApiAsync : IApiAccessor
    {
        #region Asynchronous Operations
        /// <summary>
        /// Add, Subtract Email Credits
        /// </summary>
        /// <remarks>
        /// Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task SubaccountsByEmailCreditsPatchAsync(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add, Subtract Email Credits
        /// </summary>
        /// <remarks>
        /// Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> SubaccountsByEmailCreditsPatchWithHttpInfoAsync(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Delete SubAccount
        /// </summary>
        /// <remarks>
        /// Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        System.Threading.Tasks.Task SubaccountsByEmailDeleteAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Delete SubAccount
        /// </summary>
        /// <remarks>
        /// Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        System.Threading.Tasks.Task<ApiResponse<Object>> SubaccountsByEmailDeleteWithHttpInfoAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Load SubAccount
        /// </summary>
        /// <remarks>
        /// Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubAccountInfo</returns>
        System.Threading.Tasks.Task<SubAccountInfo> SubaccountsByEmailGetAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Load SubAccount
        /// </summary>
        /// <remarks>
        /// Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubAccountInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<SubAccountInfo>> SubaccountsByEmailGetWithHttpInfoAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Update SubAccount Email Settings
        /// </summary>
        /// <remarks>
        /// Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubaccountEmailSettings</returns>
        System.Threading.Tasks.Task<SubaccountEmailSettings> SubaccountsByEmailSettingsEmailPutAsync(string email, SubaccountEmailSettings subaccountEmailSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Update SubAccount Email Settings
        /// </summary>
        /// <remarks>
        /// Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubaccountEmailSettings)</returns>
        System.Threading.Tasks.Task<ApiResponse<SubaccountEmailSettings>> SubaccountsByEmailSettingsEmailPutWithHttpInfoAsync(string email, SubaccountEmailSettings subaccountEmailSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Load SubAccounts
        /// </summary>
        /// <remarks>
        /// Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;SubAccountInfo&gt;</returns>
        System.Threading.Tasks.Task<List<SubAccountInfo>> SubaccountsGetAsync(int? limit = default(int?), int? offset = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Load SubAccounts
        /// </summary>
        /// <remarks>
        /// Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;SubAccountInfo&gt;)</returns>
        System.Threading.Tasks.Task<ApiResponse<List<SubAccountInfo>>> SubaccountsGetWithHttpInfoAsync(int? limit = default(int?), int? offset = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        /// <summary>
        /// Add SubAccount
        /// </summary>
        /// <remarks>
        /// Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubAccountInfo</returns>
        System.Threading.Tasks.Task<SubAccountInfo> SubaccountsPostAsync(SubaccountPayload subaccountPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));

        /// <summary>
        /// Add SubAccount
        /// </summary>
        /// <remarks>
        /// Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </remarks>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubAccountInfo)</returns>
        System.Threading.Tasks.Task<ApiResponse<SubAccountInfo>> SubaccountsPostWithHttpInfoAsync(SubaccountPayload subaccountPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken));
        #endregion Asynchronous Operations
    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public interface ISubAccountsApi : ISubAccountsApiSync, ISubAccountsApiAsync
    {

    }

    /// <summary>
    /// Represents a collection of functions to interact with the API endpoints
    /// </summary>
    public partial class SubAccountsApi : ISubAccountsApi
    {
        private ElasticEmail.Client.ExceptionFactory _exceptionFactory = (name, response) => null;

        /// <summary>
        /// Initializes a new instance of the <see cref="SubAccountsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SubAccountsApi() : this((string)null)
        {
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SubAccountsApi"/> class.
        /// </summary>
        /// <returns></returns>
        public SubAccountsApi(string basePath)
        {
            this.Configuration = ElasticEmail.Client.Configuration.MergeConfigurations(
                ElasticEmail.Client.GlobalConfiguration.Instance,
                new ElasticEmail.Client.Configuration { BasePath = basePath }
            );
            this.Client = new ElasticEmail.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new ElasticEmail.Client.ApiClient(this.Configuration.BasePath);
            this.ExceptionFactory = ElasticEmail.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SubAccountsApi"/> class
        /// using Configuration object
        /// </summary>
        /// <param name="configuration">An instance of Configuration</param>
        /// <returns></returns>
        public SubAccountsApi(ElasticEmail.Client.Configuration configuration)
        {
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Configuration = ElasticEmail.Client.Configuration.MergeConfigurations(
                ElasticEmail.Client.GlobalConfiguration.Instance,
                configuration
            );
            this.Client = new ElasticEmail.Client.ApiClient(this.Configuration.BasePath);
            this.AsynchronousClient = new ElasticEmail.Client.ApiClient(this.Configuration.BasePath);
            ExceptionFactory = ElasticEmail.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// Initializes a new instance of the <see cref="SubAccountsApi"/> class
        /// using a Configuration object and client instance.
        /// </summary>
        /// <param name="client">The client interface for synchronous API access.</param>
        /// <param name="asyncClient">The client interface for asynchronous API access.</param>
        /// <param name="configuration">The configuration object.</param>
        public SubAccountsApi(ElasticEmail.Client.ISynchronousClient client, ElasticEmail.Client.IAsynchronousClient asyncClient, ElasticEmail.Client.IReadableConfiguration configuration)
        {
            if (client == null) throw new ArgumentNullException("client");
            if (asyncClient == null) throw new ArgumentNullException("asyncClient");
            if (configuration == null) throw new ArgumentNullException("configuration");

            this.Client = client;
            this.AsynchronousClient = asyncClient;
            this.Configuration = configuration;
            this.ExceptionFactory = ElasticEmail.Client.Configuration.DefaultExceptionFactory;
        }

        /// <summary>
        /// The client for accessing this underlying API asynchronously.
        /// </summary>
        public ElasticEmail.Client.IAsynchronousClient AsynchronousClient { get; set; }

        /// <summary>
        /// The client for accessing this underlying API synchronously.
        /// </summary>
        public ElasticEmail.Client.ISynchronousClient Client { get; set; }

        /// <summary>
        /// Gets the base path of the API client.
        /// </summary>
        /// <value>The base path</value>
        public string GetBasePath()
        {
            return this.Configuration.BasePath;
        }

        /// <summary>
        /// Gets or sets the configuration object
        /// </summary>
        /// <value>An instance of the Configuration</value>
        public ElasticEmail.Client.IReadableConfiguration Configuration { get; set; }

        /// <summary>
        /// Provides a factory method hook for the creation of exceptions.
        /// </summary>
        public ElasticEmail.Client.ExceptionFactory ExceptionFactory
        {
            get
            {
                if (_exceptionFactory != null && _exceptionFactory.GetInvocationList().Length > 1)
                {
                    throw new InvalidOperationException("Multicast delegate for ExceptionFactory is unsupported.");
                }
                return _exceptionFactory;
            }
            set { _exceptionFactory = value; }
        }

        /// <summary>
        /// Add, Subtract Email Credits Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <returns></returns>
        public void SubaccountsByEmailCreditsPatch(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload)
        {
            SubaccountsByEmailCreditsPatchWithHttpInfo(email, subaccountEmailCreditsPayload);
        }

        /// <summary>
        /// Add, Subtract Email Credits Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ElasticEmail.Client.ApiResponse<Object> SubaccountsByEmailCreditsPatchWithHttpInfo(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload)
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailCreditsPatch");
            }

            // verify the required parameter 'subaccountEmailCreditsPayload' is set
            if (subaccountEmailCreditsPayload == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountEmailCreditsPayload' when calling SubAccountsApi->SubaccountsByEmailCreditsPatch");
            }

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter
            localVarRequestOptions.Data = subaccountEmailCreditsPayload;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Patch<Object>("/subaccounts/{email}/credits", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailCreditsPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add, Subtract Email Credits Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task SubaccountsByEmailCreditsPatchAsync(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await SubaccountsByEmailCreditsPatchWithHttpInfoAsync(email, subaccountEmailCreditsPayload, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Add, Subtract Email Credits Update email credits of a subaccount by the given amount. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="subaccountEmailCreditsPayload">Amount of email credits to add or subtract from the current SubAccount email credits pool (positive or negative value)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<Object>> SubaccountsByEmailCreditsPatchWithHttpInfoAsync(string email, SubaccountEmailCreditsPayload subaccountEmailCreditsPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailCreditsPatch");
            }

            // verify the required parameter 'subaccountEmailCreditsPayload' is set
            if (subaccountEmailCreditsPayload == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountEmailCreditsPayload' when calling SubAccountsApi->SubaccountsByEmailCreditsPatch");
            }


            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter
            localVarRequestOptions.Data = subaccountEmailCreditsPayload;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PatchAsync<Object>("/subaccounts/{email}/credits", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailCreditsPatch", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete SubAccount Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns></returns>
        public void SubaccountsByEmailDelete(string email)
        {
            SubaccountsByEmailDeleteWithHttpInfo(email);
        }

        /// <summary>
        /// Delete SubAccount Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>ApiResponse of Object(void)</returns>
        public ElasticEmail.Client.ApiResponse<Object> SubaccountsByEmailDeleteWithHttpInfo(string email)
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailDelete");
            }

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Delete<Object>("/subaccounts/{email}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Delete SubAccount Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of void</returns>
        public async System.Threading.Tasks.Task SubaccountsByEmailDeleteAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            await SubaccountsByEmailDeleteWithHttpInfoAsync(email, cancellationToken).ConfigureAwait(false);
        }

        /// <summary>
        /// Delete SubAccount Deletes specified SubAccount. An email will be sent to confirm this change. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<Object>> SubaccountsByEmailDeleteWithHttpInfoAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailDelete");
            }


            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.DeleteAsync<Object>("/subaccounts/{email}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailDelete", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Load SubAccount Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>SubAccountInfo</returns>
        public SubAccountInfo SubaccountsByEmailGet(string email)
        {
            ElasticEmail.Client.ApiResponse<SubAccountInfo> localVarResponse = SubaccountsByEmailGetWithHttpInfo(email);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Load SubAccount Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <returns>ApiResponse of SubAccountInfo</returns>
        public ElasticEmail.Client.ApiResponse<SubAccountInfo> SubaccountsByEmailGetWithHttpInfo(string email)
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailGet");
            }

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<SubAccountInfo>("/subaccounts/{email}", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Load SubAccount Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubAccountInfo</returns>
        public async System.Threading.Tasks.Task<SubAccountInfo> SubaccountsByEmailGetAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            ElasticEmail.Client.ApiResponse<SubAccountInfo> localVarResponse = await SubaccountsByEmailGetWithHttpInfoAsync(email, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Load SubAccount Returns details for the specified SubAccount. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email">Email address of Sub-Account</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubAccountInfo)</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<SubAccountInfo>> SubaccountsByEmailGetWithHttpInfoAsync(string email, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailGet");
            }


            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<SubAccountInfo>("/subaccounts/{email}", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update SubAccount Email Settings Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <returns>SubaccountEmailSettings</returns>
        public SubaccountEmailSettings SubaccountsByEmailSettingsEmailPut(string email, SubaccountEmailSettings subaccountEmailSettings)
        {
            ElasticEmail.Client.ApiResponse<SubaccountEmailSettings> localVarResponse = SubaccountsByEmailSettingsEmailPutWithHttpInfo(email, subaccountEmailSettings);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update SubAccount Email Settings Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <returns>ApiResponse of SubaccountEmailSettings</returns>
        public ElasticEmail.Client.ApiResponse<SubaccountEmailSettings> SubaccountsByEmailSettingsEmailPutWithHttpInfo(string email, SubaccountEmailSettings subaccountEmailSettings)
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailSettingsEmailPut");
            }

            // verify the required parameter 'subaccountEmailSettings' is set
            if (subaccountEmailSettings == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountEmailSettings' when calling SubAccountsApi->SubaccountsByEmailSettingsEmailPut");
            }

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter
            localVarRequestOptions.Data = subaccountEmailSettings;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Put<SubaccountEmailSettings>("/subaccounts/{email}/settings/email", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailSettingsEmailPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Update SubAccount Email Settings Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubaccountEmailSettings</returns>
        public async System.Threading.Tasks.Task<SubaccountEmailSettings> SubaccountsByEmailSettingsEmailPutAsync(string email, SubaccountEmailSettings subaccountEmailSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            ElasticEmail.Client.ApiResponse<SubaccountEmailSettings> localVarResponse = await SubaccountsByEmailSettingsEmailPutWithHttpInfoAsync(email, subaccountEmailSettings, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Update SubAccount Email Settings Update SubAccount email settings. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="email"></param>
        /// <param name="subaccountEmailSettings">Updated Email Settings</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubaccountEmailSettings)</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<SubaccountEmailSettings>> SubaccountsByEmailSettingsEmailPutWithHttpInfoAsync(string email, SubaccountEmailSettings subaccountEmailSettings, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'email' is set
            if (email == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'email' when calling SubAccountsApi->SubaccountsByEmailSettingsEmailPut");
            }

            // verify the required parameter 'subaccountEmailSettings' is set
            if (subaccountEmailSettings == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountEmailSettings' when calling SubAccountsApi->SubaccountsByEmailSettingsEmailPut");
            }


            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.PathParameters.Add("email", ElasticEmail.Client.ClientUtils.ParameterToString(email)); // path parameter
            localVarRequestOptions.Data = subaccountEmailSettings;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PutAsync<SubaccountEmailSettings>("/subaccounts/{email}/settings/email", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsByEmailSettingsEmailPut", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Load SubAccounts Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <returns>List&lt;SubAccountInfo&gt;</returns>
        public List<SubAccountInfo> SubaccountsGet(int? limit = default(int?), int? offset = default(int?))
        {
            ElasticEmail.Client.ApiResponse<List<SubAccountInfo>> localVarResponse = SubaccountsGetWithHttpInfo(limit, offset);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Load SubAccounts Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <returns>ApiResponse of List&lt;SubAccountInfo&gt;</returns>
        public ElasticEmail.Client.ApiResponse<List<SubAccountInfo>> SubaccountsGetWithHttpInfo(int? limit = default(int?), int? offset = default(int?))
        {
            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(ElasticEmail.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(ElasticEmail.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Get<List<SubAccountInfo>>("/subaccounts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Load SubAccounts Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of List&lt;SubAccountInfo&gt;</returns>
        public async System.Threading.Tasks.Task<List<SubAccountInfo>> SubaccountsGetAsync(int? limit = default(int?), int? offset = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            ElasticEmail.Client.ApiResponse<List<SubAccountInfo>> localVarResponse = await SubaccountsGetWithHttpInfoAsync(limit, offset, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Load SubAccounts Returns a list of all your SubAccounts. Required Access Level: ViewSubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="limit">Maximum number of returned items. (optional)</param>
        /// <param name="offset">How many items should be returned ahead. (optional)</param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (List&lt;SubAccountInfo&gt;)</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<List<SubAccountInfo>>> SubaccountsGetWithHttpInfoAsync(int? limit = default(int?), int? offset = default(int?), System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            if (limit != null)
            {
                localVarRequestOptions.QueryParameters.Add(ElasticEmail.Client.ClientUtils.ParameterToMultiMap("", "limit", limit));
            }
            if (offset != null)
            {
                localVarRequestOptions.QueryParameters.Add(ElasticEmail.Client.ClientUtils.ParameterToMultiMap("", "offset", offset));
            }

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.GetAsync<List<SubAccountInfo>>("/subaccounts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsGet", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add SubAccount Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <returns>SubAccountInfo</returns>
        public SubAccountInfo SubaccountsPost(SubaccountPayload subaccountPayload)
        {
            ElasticEmail.Client.ApiResponse<SubAccountInfo> localVarResponse = SubaccountsPostWithHttpInfo(subaccountPayload);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add SubAccount Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <returns>ApiResponse of SubAccountInfo</returns>
        public ElasticEmail.Client.ApiResponse<SubAccountInfo> SubaccountsPostWithHttpInfo(SubaccountPayload subaccountPayload)
        {
            // verify the required parameter 'subaccountPayload' is set
            if (subaccountPayload == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountPayload' when calling SubAccountsApi->SubaccountsPost");
            }

            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = subaccountPayload;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = this.Client.Post<SubAccountInfo>("/subaccounts", localVarRequestOptions, this.Configuration);
            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

        /// <summary>
        /// Add SubAccount Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of SubAccountInfo</returns>
        public async System.Threading.Tasks.Task<SubAccountInfo> SubaccountsPostAsync(SubaccountPayload subaccountPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            ElasticEmail.Client.ApiResponse<SubAccountInfo> localVarResponse = await SubaccountsPostWithHttpInfoAsync(subaccountPayload, cancellationToken).ConfigureAwait(false);
            return localVarResponse.Data;
        }

        /// <summary>
        /// Add SubAccount Add a new SubAccount to your Account. To receive an access token for this SubAccount, make a POST security/apikeys request using the &#39;subaccount&#39; parameter. Required Access Level: ModifySubAccounts
        /// </summary>
        /// <exception cref="ElasticEmail.Client.ApiException">Thrown when fails to make API call</exception>
        /// <param name="subaccountPayload"></param>
        /// <param name="cancellationToken">Cancellation Token to cancel the request.</param>
        /// <returns>Task of ApiResponse (SubAccountInfo)</returns>
        public async System.Threading.Tasks.Task<ElasticEmail.Client.ApiResponse<SubAccountInfo>> SubaccountsPostWithHttpInfoAsync(SubaccountPayload subaccountPayload, System.Threading.CancellationToken cancellationToken = default(System.Threading.CancellationToken))
        {
            // verify the required parameter 'subaccountPayload' is set
            if (subaccountPayload == null)
            {
                throw new ElasticEmail.Client.ApiException(400, "Missing required parameter 'subaccountPayload' when calling SubAccountsApi->SubaccountsPost");
            }


            ElasticEmail.Client.RequestOptions localVarRequestOptions = new ElasticEmail.Client.RequestOptions();

            string[] _contentTypes = new string[] {
                "application/json"
            };

            // to determine the Accept header
            string[] _accepts = new string[] {
                "application/json"
            };

            var localVarContentType = ElasticEmail.Client.ClientUtils.SelectHeaderContentType(_contentTypes);
            if (localVarContentType != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Content-Type", localVarContentType);
            }

            var localVarAccept = ElasticEmail.Client.ClientUtils.SelectHeaderAccept(_accepts);
            if (localVarAccept != null)
            {
                localVarRequestOptions.HeaderParameters.Add("Accept", localVarAccept);
            }

            localVarRequestOptions.Data = subaccountPayload;

            // authentication (apikey) required
            if (!string.IsNullOrEmpty(this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey")))
            {
                localVarRequestOptions.HeaderParameters.Add("X-ElasticEmail-ApiKey", this.Configuration.GetApiKeyWithPrefix("X-ElasticEmail-ApiKey"));
            }

            // make the HTTP request
            var localVarResponse = await this.AsynchronousClient.PostAsync<SubAccountInfo>("/subaccounts", localVarRequestOptions, this.Configuration, cancellationToken).ConfigureAwait(false);

            if (this.ExceptionFactory != null)
            {
                Exception _exception = this.ExceptionFactory("SubaccountsPost", localVarResponse);
                if (_exception != null)
                {
                    throw _exception;
                }
            }

            return localVarResponse;
        }

    }
}
